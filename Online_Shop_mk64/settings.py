"""
Django settings for Online_Shop_mk64 project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
JAZZMIN_SETTINGS = {
    "site_logo":"shopping.png",

    # title of the window (Will default to current_admin_site.site_title if absent or None)
    "site_title": "Shop admin",

    # Title on the brand, and login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_header": "Jalal Shop",

    # Welcome text on the login screen
    "welcome_sign": "Welcome to the Jalal Shop panel! ",

    # Copyright on the footer
    "copyright": "Jalal Shop",

    # The model admin to search from the search bar, search bar omitted if excluded
    "search_model": "user.User",

    # Field name on user model that contains avatar image
    "user_avatar": None,

    # Links to put along the top menu
    "topmenu_links": [

        # Url that gets reversed (Permissions can be added)
        {"name": "Home",  "url": "admin:index", "permissions": ["auth.view_user"]},

        # model admin to link to (Permissions checked against model)
        {"model": "user.User"},
    ],

    #############
    # User Menu #
    #############

    # Additional links to include in the user menu on the top right ("app" url type is not allowed)
    "usermenu_links": [
        {"name": "Support", "url": "https://github.com/farridav/django-jazzmin/issues", "new_window": True},
        {"model": "user.User"}
    ],

    # Whether to display the side menu
    "show_sidebar": True,

    # Whether to aut expand the menu
    "navigation_expanded": True,

    # Hide these apps when generating side menu e.g (auth)
    "hide_apps": [],

    # Hide these models when generating side menu (e.g auth.user)
    "hide_models": [],

    # for the full list of 5.13.0 free icon classes
    "icons": {
        "auth": "fas fa-users-cog",
        "user.User": "fas fa-user",
        "core.User": "fas fa-user",
        "costumer.Costumer": "fas fa-user",
        "costumer.Address": "fa fa-address-card",
        "order.Cart": "fa fa-shopping-cart",
        "order.CartItem": "fa fa-shopping-cart",
        "product.Brand": "fab fa-app-store",
        "product.Category": "fab fa-app-store",
        "product.Discount": "fa fa-percent",
        "product.OffCode": "fa fa-percent",
        "product.Product": "fa fa-product-hunt",

        "user.Mentor": "fas fa-chalkboard-teacher",
        "user.Candidate": "fas fa-user-tie",
        "voice.Voice": "fas fa-music",
        "team.Team": "fas fa-users",
        "score.ScoreItem": "fas fa-star-half-alt",
        "auth.Group": "fas fa-users-cog",
    },
    # Icons that are used when one is not manually specified
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",

    "related_modal_active": False,

    "show_ui_builder": True,

    "changeform_format": "horizontal_tabs",
    "changeform_format_overrides": {"user.User": "collapsible"},
}

JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": "navbar-indigo",
    "accent": "accent-lightblue",
    "navbar": "navbar-white navbar-light",
    "no_navbar_border": False,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": True,
    "sidebar": "sidebar-dark-purple",
    "sidebar_nav_small_text": True,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "default",
    "dark_mode_theme": "cyborg",
    "button_classes": {
        "primary": "btn-outline-primary",
        "secondary": "btn-outline-secondary",
        "info": "btn-outline-info",
        "warning": "btn-outline-warning",
        "danger": "btn-outline-danger",
        "success": "btn-outline-success"
    },
    "actions_sticky_top": True
}


# Build paths inside the project like this: BASE_DIR / 'subdir'.

# from django.conf.global_settings import LANGUAGES

BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-bzh%eef!=@5dwcz^pj91qb%@+*7bhb)kj%um+s&pw%3a7ps!@)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'core',
    'costumer',
    'order',
    'product',
    'home',
    'rosetta',
    'django_extensions',
]

# REST_FRAMEWORK = {
#     'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
#     'PAGE_SIZE': 3
# }

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Online_Shop_mk64.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'product.context_processor.main_category',
                'product.context_processor2.count_basket',
                # 'order.context.number_order_cart',
                # 'costumer.views.CostumerLoginView',
            ],
        },
    },
]



WSGI_APPLICATION = 'Online_Shop_mk64.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

LANGUAGES = (
    ('en', 'English'),
    ('fa', 'Farsi'),
)
import os

LOCALE_PATHS = (
    os.path.join(BASE_DIR, "locale"),
)
TIME_ZONE = 'UTC'

USE_I18N = True
USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / "static", 'static/', ]
MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'core.User'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'short-formatter': {
            'format': '{levelname} ({asctime}): "{message}"',
            'style': '{',
        },
        'verbose-formatter': {
            'format': '{levelname} ({asctime}): "{message}" at  {module} (process: {process.d}, thread: {thread.d})',
            'style': '{',
        },
    },
    'filters': {
        'length_limit': {
            '()': 'django.utils.log.CallbackFilter',
            'callback': lambda record: not len(record.getMessage()) < 20
        },

    },
    'handlers': {
        'my-console-handler': {
            'class': 'logging.StreamHandler',
            'formatter': 'short-formatter',
            'filters': ['length_limit'],
        },
        'my-file-handler': {
            'class': 'logging.FileHandler',  # Write file!
            'filename': BASE_DIR / 'a-test.log',
            'formatter': 'verbose-formatter',
            'level': 'ERROR'
        },
    },
    'root': {
        'handlers': ['my-console-handler'],
        'level': 'DEBUG',
    },
    'loggers': {
        'project': {
            'handlers': ['my-file-handler'],
            'level': 'ERROR',
            'propagate': True,
        },
        'project.developers': {
            'handlers': ['my-file-handler'],
            'level': 'DEBUG',
            'propagate': False,
        },
    }
}
# APPEND_SLASH=False